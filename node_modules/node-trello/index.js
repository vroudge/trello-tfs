module.exports = require("./lib/node-trello");

var Trello,
    Request,
    OAuth,
    accessURL,
    appName,
    authorizeURL,
    cb,
    domain,
    http,
    key,
    login,
    loginCallback,
    oauth,
    oauth_secrets,
    port,
    requestURL,
    secret,
    url,
    member_object;

http = require('http');
OAuth = require('oauth').OAuth;
url = require('url');
Trello = require("node-trello");
Request = require("request");

domain = "127.0.0.1";
port = 6080;
requestURL = "https://trello.com/1/OAuthGetRequestToken";
accessURL = "https://trello.com/1/OAuthGetAccessToken";
authorizeURL = "https://trello.com/1/OAuthAuthorizeToken";
appName = "Tests";
key = "6fae7cb0f009b13e0b9a2fd0ad457407";
secret = "316260bd6b9a9b9bcd0db8a59ce72fb7c7c393a5862ddd85a1791db6fd461577";
loginCallback = "http://" + domain + ":" + port + "/cb";
oauth_secrets = {};
member_object = {};

oauth = new OAuth(requestURL, accessURL, key, secret, "1.0", loginCallback, "HMAC-SHA1");

login = function(req, res) {
    return oauth.getOAuthRequestToken((function(_this) {
        return function(error, token, tokenSecret, results) {
            oauth_secrets[token] = tokenSecret;
            res.writeHead(302, {
                'Location': authorizeURL + "?oauth_token=" + token + "&name=" + appName + "&expiration=never&scope=read,write"
            });
            return res.end();
        };
    })(this));
};

cb = function(req, res) {
    var query, token, tokenSecret, verifier;
    query = url.parse(req.url, true).query;
    token = query.oauth_token;
    tokenSecret = oauth_secrets[token];
    verifier = query.oauth_verifier;
    return oauth.getOAuthAccessToken(token, tokenSecret, verifier, function(error, accessToken, accessTokenSecret, results) {
        return oauth.getProtectedResource("https://api.trello.com/1/members/me", "GET", accessToken, accessTokenSecret, function(error, data, response) {
            return res.end(data);
        });
    });
};

http.createServer(function(req, res) {
    if (/^\/login/.test(req.url)) {
        return login(req, res);
    } else if (/^\/cb/.test(req.url)) {
        return cb(req, res);
    } else {
        return res.end("<a href='/login'> please login <a>");
    }
}).listen(port, domain);

console.log("Server running at " + domain + ":" + port + "; hit " + domain + ":" + port + "/login");
/*

var t = new Trello("<your key>", "<token>");

t.get("/1/members/me", function(err, data) {
    if (err) throw err;
    console.log(data);
});

// URL arguments are passed in as an object.
t.get("/1/members/me", { cards: "open" }, function(err, data) {
    if (err) throw err;
    console.log(data);
});*/
